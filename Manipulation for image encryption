from PIL import Image

def encrypt_image(image_path, key):
    # Open the image
    img = Image.open(image_path)
    width, height = img.size
    
    # Convert image to RGB mode if it's not
    img = img.convert("RGB")
    
    # Create a new image to store the encrypted pixels
    encrypted_img = Image.new("RGB", (width, height))
    
    # Iterate through each pixel and apply encryption
    for x in range(width):
        for y in range(height):
            r, g, b = img.getpixel((x, y))
            # Example of simple encryption: swap red and blue channels
            encrypted_r = b
            encrypted_g = g
            encrypted_b = r
            # Update pixel in the encrypted image
            encrypted_img.putpixel((x, y), (encrypted_r, encrypted_g, encrypted_b))
    
    # Save the encrypted image
    encrypted_image_path = image_path.split('.')[0] + '_encrypted.png'
    encrypted_img.save(encrypted_image_path)
    print(f"Image encrypted successfully and saved as '{encrypted_image_path}'.")

def decrypt_image(encrypted_image_path, key):
    # Open the encrypted image
    encrypted_img = Image.open(encrypted_image_path)
    width, height = encrypted_img.size
    
    # Create a new image to store the decrypted pixels
    decrypted_img = Image.new("RGB", (width, height))
    
    # Iterate through each pixel and apply decryption (in this case, the same as encryption)
    for x in range(width):
        for y in range(height):
            encrypted_r, encrypted_g, encrypted_b = encrypted_img.getpixel((x, y))
            # Example of simple decryption: swap red and blue channels back
            decrypted_r = encrypted_b
            decrypted_g = encrypted_g
            decrypted_b = encrypted_r
            # Update pixel in the decrypted image
            decrypted_img.putpixel((x, y), (decrypted_r, decrypted_g, decrypted_b))
    
    # Save the decrypted image
    decrypted_image_path = encrypted_image_path.split('_encrypted')[0] + '_decrypted.png'
    decrypted_img.save(decrypted_image_path)
    print(f"Image decrypted successfully and saved as '{decrypted_image_path}'.")

def main():
    while True:
        print("\nMenu:")
        print("1. Encrypt Image")
        print("2. Decrypt Image")
        print("3. Quit")
        
        choice = input("Enter your choice (1/2/3): ").strip()
        
        if choice == '1':
            image_path = input("Enter the path to the image file to encrypt: ").strip()
            key = input("Enter the encryption key (any string): ").strip()
            encrypt_image(image_path, key)
        elif choice == '2':
            encrypted_image_path = input("Enter the path to the encrypted image file to decrypt: ").strip()
            key = input("Enter the decryption key (must be the same as encryption key): ").strip()
            decrypt_image(encrypted_image_path, key)
        elif choice == '3':
            print("Exiting the program.")
            break
        else:
            print("Invalid choice. Please enter 1, 2, or 3.")

if __name__ == "__main__":
    main()
